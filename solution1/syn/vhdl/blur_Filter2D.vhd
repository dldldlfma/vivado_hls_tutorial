-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity blur_Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_0_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_0_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_1_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    p_kernel_val_2_2_read : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of blur_Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_pp0_stg0_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st12_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3FFE : STD_LOGIC_VECTOR (13 downto 0) := "11111111111110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv13_1FFD : STD_LOGIC_VECTOR (12 downto 0) := "1111111111101";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal p_027_0_i_i_reg_342 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_68 : BOOLEAN;
    signal p_src_rows_V_read_reg_1548 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast_i_fu_353_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_cast_i_reg_1559 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_src_cols_V_read_reg_1570 : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_cast_i_fu_357_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_i_reg_1577 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_i_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_102 : BOOLEAN;
    signal heightloop_fu_367_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal heightloop_reg_1666 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_i_phi_fu_324_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal widthloop_fu_372_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal widthloop_reg_1671 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_neg392_i_cast_i_fu_380_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_neg392_i_cast_i_reg_1676 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_anchor_2_1_cast_i_fu_394_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_anchor_2_1_cast_i_reg_1683 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_129_i_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_i_reg_1688 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_i_fu_414_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_140_i_reg_1695 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_22_i_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_reg_1702 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_fu_436_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_26_i_reg_1707 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_442_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_reg_1712 : STD_LOGIC_VECTOR (1 downto 0);
    signal OP2_V_0_i_fu_448_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_i_reg_1717 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_1_i_fu_451_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_1_i_reg_1722 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_2_i_fu_454_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_0_2_i_reg_1727 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_i_fu_457_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_i_reg_1732 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_1_i_fu_460_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_1_i_reg_1737 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_2_i_fu_463_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_2_i_reg_1742 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_i_fu_466_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_i_reg_1747 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_1_i_fu_469_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_1_i_reg_1752 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_2_i_fu_472_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_2_2_i_reg_1757 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_V_fu_484_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_1765 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_151 : BOOLEAN;
    signal tmp_14_i_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_reg_1770 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1779 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_i_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_i_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_1_i_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_1_i_reg_1788 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_2_i_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_2_i_reg_1792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_i_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_i_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_768_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_reg_1803 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_811_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_reg_1808 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_854_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_reg_1813 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1818 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_184 : BOOLEAN;
    signal row_assign_8_i_fu_867_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_i_reg_1823 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_fu_871_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_i_reg_1828 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_fu_875_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_i_reg_1833 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_i_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_reg_1838 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_202 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_reg_1847 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_227 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal or_cond_i_i_reg_1879 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_243 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_888_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_i_i_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1851 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_i_mux_fu_946_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_cast_i_mux_reg_1857 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i_i_i_fu_968_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i_i_i_reg_1862 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_i_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_reg_1867 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_reg_1872 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_i_reg_1872_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1883 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_1_t_i_fu_1042_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_1_t_i_reg_1889 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1896 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1902 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_val_0_0_fu_1166_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_reg_1908 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1908_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_1184_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_reg_1913 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_fu_1202_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1919 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp12_fu_1241_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp12_reg_1925 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_0_1_i_fu_1298_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_0_1_i_reg_1930 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_fu_1329_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp9_reg_1935 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_1_1_i_fu_1339_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_1_1_i_reg_1940 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_1359_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp11_reg_1945 : STD_LOGIC_VECTOR (17 downto 0);
    signal isneg_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1453_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1956 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_i_i_i_reg_1961 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1496_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1966 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_i_reg_320 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_014_0_i_i_reg_331 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_382 : BOOLEAN;
    signal tmp_63_i_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_1_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_1_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_1076_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1094_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_1_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1112_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_377_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_76_i_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_i_fu_403_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_139_cast_i_fu_410_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_25_i_fu_425_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_25_cast_i_fu_432_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_11_fu_386_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_cast_i_fu_475_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_fu_500_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_123_i_fu_538_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_i_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_569_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_i_fu_577_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i413_i_i_fu_583_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_6_1_i_fu_603_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_609_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_1_i_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_634_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_i_fu_642_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i413_i_1_i_fu_648_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_6_2_i_fu_668_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_32_fu_674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_2_i_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_i_fu_707_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i413_i_2_i_fu_713_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_cond_i412_i_i_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_738_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_596_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_599_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_i_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_750_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_38_fu_754_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge1_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_742_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_760_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i412_i_1_i_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_781_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_661_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_664_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_1_i_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_793_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_797_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge2_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_785_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_803_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i412_i_2_i_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_824_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_726_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_729_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_2_i_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_836_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_840_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge3_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_828_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_846_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_cast_i_fu_879_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_fu_894_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ImagLoc_x_fu_910_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_46_fu_916_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_962_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp1_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_i_fu_994_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ImagLoc_x_cast_i_mux_cast_fu_991_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_assign_2_fu_997_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp7_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1002_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_fu_1019_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal col_assign_cast_i_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1031_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_1065_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1083_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1101_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1155_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1173_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1191_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_i_fu_1219_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_i_fu_1219_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_i_fu_1219_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_2_1_i_fu_1232_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_1_i_fu_1232_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_1_i_fu_1232_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_2_1_cast_i_cast_fu_1237_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_145_2_cast_i_cast_fu_1224_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_0_i_fu_1276_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_i_fu_1276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_i_fu_1276_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_0_1_i_fu_1289_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_1_i_fu_1289_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_1_i_fu_1289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_0_1_cast_i_fu_1294_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_145_0_cast_i_fu_1281_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_0_2_i_fu_1307_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_2_i_fu_1307_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_0_2_i_fu_1307_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_1_i_fu_1320_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_i_fu_1320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_i_fu_1320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_1_cast_i_cast_fu_1325_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_145_0_2_cast_i_cast_fu_1312_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_4_1_1_i_fu_1339_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_1_i_fu_1339_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_2_i_fu_1347_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_2_i_fu_1347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_1_2_i_fu_1347_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_1_2_cast_i_cast_fu_1352_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp12_cast_fu_1356_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_0_1_cast_i_fu_1389_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp9_cast_fu_1392_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_1_i_fu_1395_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_145_1_1_cast_i_fu_1405_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_7_1_cast_i_fu_1401_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp10_fu_1408_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp11_cast_fu_1414_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_7_2_1_i_fu_1417_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_2_2_i_fu_1430_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_2_i_fu_1430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_2_2_i_fu_1430_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_2_2_i_fu_1435_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_7_2_1_cast_i_fu_1423_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_1_fu_1439_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal not_i_i_i_i_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_i_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_i_fu_1483_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_4_0_1_i_fu_1289_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_0_2_i_fu_1307_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_0_i_fu_1276_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_1_1_i_fu_1339_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_1_2_i_fu_1347_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_1_i_fu_1320_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_2_1_i_fu_1232_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_2_2_i_fu_1430_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_2_i_fu_1219_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_bdd_1235 : BOOLEAN;
    signal ap_sig_bdd_1237 : BOOLEAN;
    signal ap_sig_bdd_1234 : BOOLEAN;
    signal ap_sig_bdd_1240 : BOOLEAN;

    component blur_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component blur_Filter2D_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component blur_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => k_buf_0_val_3_d1);

    k_buf_0_val_4_U : component blur_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component blur_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    blur_mux_3to1_sel2_8_1_U20 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_0_1_fu_170,
        din2 => right_border_buf_0_val_0_1_1_fu_174,
        din3 => ap_const_lv8_0,
        din4 => col_assign_1_t_i_reg_1889,
        dout => tmp_8_fu_1065_p5);

    blur_mux_3to1_sel2_8_1_U21 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_1_1_fu_182,
        din2 => right_border_buf_0_val_1_1_1_fu_186,
        din3 => ap_const_lv8_0,
        din4 => col_assign_1_t_i_reg_1889,
        dout => tmp_9_fu_1083_p5);

    blur_mux_3to1_sel2_8_1_U22 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_2_1_1_fu_190,
        din2 => right_border_buf_0_val_2_1_fu_178,
        din3 => ap_const_lv8_0,
        din4 => col_assign_1_t_i_reg_1889,
        dout => tmp_10_fu_1101_p5);

    blur_mux_3to1_sel2_8_1_U23 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_fu_1076_p3,
        din2 => col_buf_0_val_1_0_fu_1094_p3,
        din3 => col_buf_0_val_2_0_fu_1112_p3,
        din4 => row_assign_8_i_reg_1823,
        dout => tmp_15_fu_1155_p5);

    blur_mux_3to1_sel2_8_1_U24 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_fu_1076_p3,
        din2 => col_buf_0_val_1_0_fu_1094_p3,
        din3 => col_buf_0_val_2_0_fu_1112_p3,
        din4 => row_assign_8_1_t_i_reg_1828,
        dout => tmp_17_fu_1173_p5);

    blur_mux_3to1_sel2_8_1_U25 : component blur_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_fu_1076_p3,
        din2 => col_buf_0_val_1_0_fu_1094_p3,
        din3 => col_buf_0_val_2_0_fu_1112_p3,
        din4 => row_assign_8_2_t_i_reg_1833,
        dout => tmp_19_fu_1191_p5);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_12_i_fu_479_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = tmp_16_i_fu_883_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
                        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) then 
                        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_014_0_i_i_reg_331 assign process. --
    p_014_0_i_i_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_5)) then 
                p_014_0_i_i_reg_331 <= i_V_reg_1765;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_3_i_phi_fu_324_p4 = ap_const_lv1_0))) then 
                p_014_0_i_i_reg_331 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_027_0_i_i_reg_342 assign process. --
    p_027_0_i_i_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_16_i_fu_883_p2)))) then 
                p_027_0_i_i_reg_342 <= j_V_fu_888_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                p_027_0_i_i_reg_342 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- tmp_3_i_reg_320 assign process. --
    tmp_3_i_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_68))) then 
                tmp_3_i_reg_320 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_3_i_phi_fu_324_p4 = ap_const_lv1_0)))) then 
                tmp_3_i_reg_320 <= tmp_4_i_fu_361_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_16_i_fu_883_p2)))) then
                ImagLoc_x_cast_i_mux_reg_1857 <= ImagLoc_x_cast_i_mux_fu_946_p3;
                brmerge_i_reg_1872 <= brmerge_i_fu_981_p2;
                brmerge_reg_1851 <= brmerge_fu_941_p2;
                or_cond_i_i_i_reg_1847 <= or_cond_i_i_i_fu_935_p2;
                or_cond_i_i_reg_1879 <= or_cond_i_i_fu_986_p2;
                p_p2_i_i_i_reg_1862 <= p_p2_i_i_i_fu_968_p3;
                tmp_24_i_reg_1867 <= tmp_24_i_fu_976_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_3_i_phi_fu_324_p4 = ap_const_lv1_0))) then
                OP2_V_0_1_i_reg_1722 <= OP2_V_0_1_i_fu_451_p1;
                OP2_V_0_2_i_reg_1727 <= OP2_V_0_2_i_fu_454_p1;
                OP2_V_0_i_reg_1717 <= OP2_V_0_i_fu_448_p1;
                OP2_V_1_1_i_reg_1737 <= OP2_V_1_1_i_fu_460_p1;
                OP2_V_1_2_i_reg_1742 <= OP2_V_1_2_i_fu_463_p1;
                OP2_V_1_i_reg_1732 <= OP2_V_1_i_fu_457_p1;
                OP2_V_2_1_i_reg_1752 <= OP2_V_2_1_i_fu_469_p1;
                OP2_V_2_2_i_reg_1757 <= OP2_V_2_2_i_fu_472_p1;
                OP2_V_2_i_reg_1747 <= OP2_V_2_i_fu_466_p1;
                heightloop_reg_1666 <= heightloop_fu_367_p2;
                    p_anchor_2_1_cast_i_reg_1683(0) <= p_anchor_2_1_cast_i_fu_394_p1(0);
                p_neg392_i_cast_i_reg_1676 <= p_neg392_i_cast_i_fu_380_p2;
                tmp_129_i_reg_1688 <= tmp_129_i_fu_398_p2;
                    tmp_140_i_reg_1695(13 downto 1) <= tmp_140_i_fu_414_p2(13 downto 1);
                tmp_22_i_reg_1702 <= tmp_22_i_fu_420_p2;
                    tmp_26_i_reg_1707(13 downto 1) <= tmp_26_i_fu_436_p2(13 downto 1);
                tmp_5_reg_1712 <= tmp_5_fu_442_p2;
                widthloop_reg_1671 <= widthloop_fu_372_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                ap_reg_ppstg_brmerge_i_reg_1872_pp0_it1 <= brmerge_i_reg_1872;
                ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1 <= or_cond_i_i_i_reg_1847;
                ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it1 <= or_cond_i_i_reg_1879;
                ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1 <= tmp_16_i_reg_1838;
                tmp_16_i_reg_1838 <= tmp_16_i_fu_883_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then
                ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it2 <= ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it1;
                ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it3 <= ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it2;
                ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it4 <= ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it3;
                ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5 <= ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it4;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1908_pp0_it3 <= src_kernel_win_0_val_0_0_reg_1908;
                ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it2 <= ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_16_i_reg_1838)))) then
                col_assign_1_t_i_reg_1889 <= col_assign_1_t_i_fu_1042_p2;
                k_buf_0_val_3_addr_reg_1883 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1896 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1902 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_68))) then
                    cols_cast_i_reg_1577(11 downto 0) <= cols_cast_i_fu_357_p1(11 downto 0);
                p_src_cols_V_read_reg_1570 <= p_src_cols_V_dout;
                p_src_rows_V_read_reg_1548 <= p_src_rows_V_dout;
                    rows_cast_i_reg_1559(11 downto 0) <= rows_cast_i_fu_353_p1(11 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_V_reg_1765 <= i_V_fu_484_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_12_i_fu_479_p2)))) then
                icmp_reg_1779 <= icmp_fu_510_p2;
                tmp_120_i_reg_1796 <= tmp_120_i_fu_533_p2;
                tmp_14_i_reg_1770 <= tmp_14_i_fu_490_p2;
                tmp_14_reg_1813 <= tmp_14_fu_854_p3;
                tmp_2_reg_1803 <= tmp_2_fu_768_p3;
                tmp_6_reg_1808 <= tmp_6_fu_811_p3;
                tmp_98_1_i_reg_1788 <= tmp_98_1_i_fu_521_p2;
                tmp_98_2_i_reg_1792 <= tmp_98_2_i_fu_527_p2;
                tmp_98_i_reg_1784 <= tmp_98_i_fu_516_p2;
                ult_reg_1774 <= ult_fu_495_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it3)))) then
                isneg_reg_1950 <= p_Val2_1_fu_1439_p2(19 downto 19);
                p_Result_3_i_i_i_reg_1961 <= p_Val2_1_fu_1439_p2(19 downto 8);
                p_Val2_2_reg_1956 <= p_Val2_2_fu_1453_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it2)))) then
                p_Val2_4_1_1_i_reg_1940 <= p_Val2_4_1_1_i_fu_1339_p2;
                p_Val2_7_0_1_i_reg_1930 <= p_Val2_7_0_1_i_fu_1298_p2;
                tmp11_reg_1945 <= tmp11_fu_1359_p2;
                tmp9_reg_1935 <= tmp9_fu_1329_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it4)))) then
                p_Val2_s_reg_1966 <= p_Val2_s_fu_1496_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                rev_reg_1818 <= rev_fu_862_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                right_border_buf_0_val_0_1_1_fu_174 <= right_border_buf_0_val_0_1_fu_170;
                right_border_buf_0_val_0_1_fu_170 <= col_buf_0_val_0_0_fu_1076_p3;
                right_border_buf_0_val_1_1_1_fu_186 <= right_border_buf_0_val_1_1_fu_182;
                right_border_buf_0_val_1_1_fu_182 <= col_buf_0_val_1_0_fu_1094_p3;
                right_border_buf_0_val_2_1_1_fu_190 <= col_buf_0_val_2_0_fu_1112_p3;
                right_border_buf_0_val_2_1_fu_178 <= right_border_buf_0_val_2_1_1_fu_190;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_120_i_reg_1796)))) then
                row_assign_8_1_t_i_reg_1828 <= row_assign_8_1_t_i_fu_871_p2;
                row_assign_8_2_t_i_reg_1833 <= row_assign_8_2_t_i_fu_875_p2;
                row_assign_8_i_reg_1823 <= row_assign_8_i_fu_867_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                src_kernel_win_0_val_0_0_reg_1908 <= src_kernel_win_0_val_0_0_fu_1166_p3;
                src_kernel_win_0_val_1_0_reg_1913 <= src_kernel_win_0_val_1_0_fu_1184_p3;
                src_kernel_win_0_val_2_0_reg_1919 <= src_kernel_win_0_val_2_0_fu_1202_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                src_kernel_win_0_val_0_1_1_fu_150 <= src_kernel_win_0_val_0_1_fu_146;
                src_kernel_win_0_val_0_1_fu_146 <= src_kernel_win_0_val_0_0_fu_1166_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it2)))) then
                src_kernel_win_0_val_1_1_1_fu_158 <= src_kernel_win_0_val_1_1_fu_154;
                src_kernel_win_0_val_1_1_fu_154 <= src_kernel_win_0_val_1_0_reg_1913;
                src_kernel_win_0_val_2_1_1_fu_166 <= src_kernel_win_0_val_2_1_fu_162;
                src_kernel_win_0_val_2_1_fu_162 <= src_kernel_win_0_val_2_0_reg_1919;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it1)))) then
                tmp12_reg_1925 <= tmp12_fu_1241_p2;
            end if;
        end if;
    end process;
    rows_cast_i_reg_1559(12) <= '0';
    cols_cast_i_reg_1577(12) <= '0';
    p_anchor_2_1_cast_i_reg_1683(12 downto 1) <= "000000000000";
    tmp_140_i_reg_1695(0) <= '0';
    tmp_26_i_reg_1707(0) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_68, tmp_3_i_phi_fu_324_p4, tmp_12_i_fu_479_p2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it5, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_68)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_3_i_phi_fu_324_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_12_i_fu_479_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
            when ap_ST_pp0_stg0_fsm_4 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_4;
                end if;
            when ap_ST_st12_fsm_5 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ImagLoc_x_cast_i_mux_cast_fu_991_p1 <= std_logic_vector(resize(unsigned(ImagLoc_x_cast_i_mux_reg_1857),14));
    ImagLoc_x_cast_i_mux_fu_946_p3 <= 
        ImagLoc_x_fu_910_p2 when (or_cond_i_i_i_fu_935_p2(0) = '1') else 
        ap_const_lv13_0;
    ImagLoc_x_fu_910_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_15_cast_i_fu_879_p1));
        OP2_V_0_1_i_fu_451_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_1_read),16));

        OP2_V_0_2_i_fu_454_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_2_read),16));

        OP2_V_0_i_fu_448_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_0_read),16));

        OP2_V_1_1_i_fu_460_p1 <= std_logic_vector(resize(signed(p_kernel_val_1_1_read),16));

        OP2_V_1_2_i_fu_463_p1 <= std_logic_vector(resize(signed(p_kernel_val_1_2_read),16));

        OP2_V_1_i_fu_457_p1 <= std_logic_vector(resize(signed(p_kernel_val_1_0_read),16));

        OP2_V_2_1_i_fu_469_p1 <= std_logic_vector(resize(signed(p_kernel_val_2_1_read),16));

        OP2_V_2_2_i_fu_472_p1 <= std_logic_vector(resize(signed(p_kernel_val_2_2_read),16));

        OP2_V_2_i_fu_466_p1 <= std_logic_vector(resize(signed(p_kernel_val_2_0_read),16));


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st3_fsm_2, tmp_12_i_fu_479_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_12_i_fu_479_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_12_i_fu_479_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_12_i_fu_479_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_102 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_1234 assign process. --
    ap_sig_bdd_1234_assign_proc : process(ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_reg_ppiten_pp0_it2)
    begin
                ap_sig_bdd_1234 <= (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2));
    end process;


    -- ap_sig_bdd_1235 assign process. --
    ap_sig_bdd_1235_assign_proc : process(icmp_reg_1779, tmp_98_1_i_reg_1788)
    begin
                ap_sig_bdd_1235 <= ((ap_const_lv1_0 = icmp_reg_1779) and not((ap_const_lv1_0 = tmp_98_1_i_reg_1788)));
    end process;


    -- ap_sig_bdd_1237 assign process. --
    ap_sig_bdd_1237_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779)
    begin
                ap_sig_bdd_1237 <= (not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)));
    end process;


    -- ap_sig_bdd_1240 assign process. --
    ap_sig_bdd_1240_assign_proc : process(icmp_reg_1779, tmp_98_i_reg_1784)
    begin
                ap_sig_bdd_1240 <= ((ap_const_lv1_0 = icmp_reg_1779) and not((ap_const_lv1_0 = tmp_98_i_reg_1784)));
    end process;


    -- ap_sig_bdd_151 assign process. --
    ap_sig_bdd_151_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_151 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_184 assign process. --
    ap_sig_bdd_184_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_184 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_202 assign process. --
    ap_sig_bdd_202_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_202 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_227 assign process. --
    ap_sig_bdd_227_assign_proc : process(p_src_data_stream_V_empty_n, tmp_14_i_reg_1770, icmp_reg_1779, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)
    begin
                ap_sig_bdd_227 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770))));
    end process;


    -- ap_sig_bdd_243 assign process. --
    ap_sig_bdd_243_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5)
    begin
                ap_sig_bdd_243 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5)));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_382 assign process. --
    ap_sig_bdd_382_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_382 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_68 assign process. --
    ap_sig_bdd_68_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_sig_bdd_68 <= ((p_src_rows_V_empty_n = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_4_assign_proc : process(ap_sig_bdd_202)
    begin
        if (ap_sig_bdd_202) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_5 assign process. --
    ap_sig_cseq_ST_st12_fsm_5_assign_proc : process(ap_sig_bdd_382)
    begin
        if (ap_sig_bdd_382) then 
            ap_sig_cseq_ST_st12_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_102)
    begin
        if (ap_sig_bdd_102) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_151)
    begin
        if (ap_sig_bdd_151) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_184)
    begin
        if (ap_sig_bdd_184) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_733_p2 <= (or_cond_i412_i_i_fu_563_p2 or tmp_129_i_reg_1688);
    brmerge2_fu_776_p2 <= (or_cond_i412_i_1_i_fu_628_p2 or tmp_129_i_reg_1688);
    brmerge3_fu_819_p2 <= (or_cond_i412_i_2_i_fu_693_p2 or tmp_129_i_reg_1688);
    brmerge_fu_941_p2 <= (or_cond_i_i_i_fu_935_p2 or tmp_22_i_reg_1702);
    brmerge_i_fu_981_p2 <= (rev_reg_1818 or tmp_21_i_fu_930_p2);
    col_assign_1_t_i_fu_1042_p2 <= std_logic_vector(unsigned(tmp_5_reg_1712) - unsigned(tmp_48_fu_1031_p1));
        col_assign_cast_i_fu_1027_p1 <= std_logic_vector(resize(signed(x_fu_1019_p3),32));

    col_buf_0_val_0_0_fu_1076_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_ppstg_brmerge_i_reg_1872_pp0_it1(0) = '1') else 
        tmp_8_fu_1065_p5;
    col_buf_0_val_1_0_fu_1094_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_ppstg_brmerge_i_reg_1872_pp0_it1(0) = '1') else 
        tmp_9_fu_1083_p5;
    col_buf_0_val_2_0_fu_1112_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_ppstg_brmerge_i_reg_1872_pp0_it1(0) = '1') else 
        tmp_10_fu_1101_p5;
    cols_cast_i_fu_357_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_dout),13));
    heightloop_fu_367_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(rows_cast_i_reg_1559));
    i_V_fu_484_p2 <= std_logic_vector(unsigned(p_014_0_i_i_reg_331) + unsigned(ap_const_lv12_1));
    icmp1_fu_904_p2 <= "0" when (tmp_45_fu_894_p4 = ap_const_lv11_0) else "1";
    icmp_fu_510_p2 <= "0" when (tmp_12_fu_500_p4 = ap_const_lv11_0) else "1";
    j_V_fu_888_p2 <= std_logic_vector(unsigned(p_027_0_i_i_reg_342) + unsigned(ap_const_lv12_1));
    k_buf_0_val_3_address0 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1883;

    -- k_buf_0_val_3_ce0 assign process. --
    k_buf_0_val_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_3_ce1 assign process. --
    k_buf_0_val_3_ce1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_2_i_reg_1792, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_2_i_reg_1792))))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_3_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_3_we1 assign process. --
    k_buf_0_val_3_we1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_2_i_reg_1792, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_2_i_reg_1792))))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1896;

    -- k_buf_0_val_4_ce0 assign process. --
    k_buf_0_val_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_ce1 assign process. --
    k_buf_0_val_4_ce1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_1_i_reg_1788, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_1_i_reg_1788))))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_d1 assign process. --
    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, k_buf_0_val_3_q0, ap_sig_bdd_1235, ap_sig_bdd_1237, ap_sig_bdd_1234)
    begin
        if (ap_sig_bdd_1234) then
            if (ap_sig_bdd_1237) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (ap_sig_bdd_1235) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_4_we1 assign process. --
    k_buf_0_val_4_we1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_1_i_reg_1788, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_1_i_reg_1788))))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_63_i_fu_1035_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1902;

    -- k_buf_0_val_5_ce0 assign process. --
    k_buf_0_val_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_4, ap_reg_ppiten_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_ce1 assign process. --
    k_buf_0_val_5_ce1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_i_reg_1784, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_i_reg_1784))))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_d1 assign process. --
    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, k_buf_0_val_4_q0, ap_sig_bdd_1237, ap_sig_bdd_1234, ap_sig_bdd_1240)
    begin
        if (ap_sig_bdd_1234) then
            if (ap_sig_bdd_1237) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (ap_sig_bdd_1240) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_5_we1 assign process. --
    k_buf_0_val_5_we1_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, tmp_98_i_reg_1784, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_lv1_0 = tmp_98_i_reg_1784))))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_i_fu_1472_p2 <= "0" when (p_Result_3_i_i_i_reg_1961 = ap_const_lv12_0) else "1";
    not_tmp_76_i_fu_389_p2 <= "0" when (p_src_rows_V_read_reg_1548 = ap_const_lv12_1) else "1";
    or_cond_i412_i_1_i_fu_628_p2 <= (tmp_125_1_i_fu_623_p2 and rev2_fu_617_p2);
    or_cond_i412_i_2_i_fu_693_p2 <= (tmp_125_2_i_fu_688_p2 and rev3_fu_682_p2);
    or_cond_i412_i_i_fu_563_p2 <= (tmp_125_i_fu_558_p2 and rev1_fu_552_p2);
    or_cond_i_i_fu_986_p2 <= (icmp_reg_1779 and icmp1_fu_904_p2);
    or_cond_i_i_i_fu_935_p2 <= (tmp_21_i_fu_930_p2 and rev4_fu_924_p2);
    overflow_fu_1477_p2 <= (not_i_i_i_i_fu_1472_p2 and tmp_2_i_i_i_fu_1467_p2);
    p_Val2_1_fu_1439_p2 <= std_logic_vector(signed(tmp_145_2_2_i_fu_1435_p1) + signed(p_Val2_7_2_1_cast_i_fu_1423_p1));
    p_Val2_2_fu_1453_p1 <= p_Val2_1_fu_1439_p2(8 - 1 downto 0);
    p_Val2_4_0_1_i_fu_1289_p0 <= p_Val2_4_0_1_i_fu_1289_p00(8 - 1 downto 0);
    p_Val2_4_0_1_i_fu_1289_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_fu_162),16));
    p_Val2_4_0_1_i_fu_1289_p1 <= OP2_V_0_1_i_reg_1722(8 - 1 downto 0);
    p_Val2_4_0_1_i_fu_1289_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_0_1_i_fu_1289_p0) * signed(p_Val2_4_0_1_i_fu_1289_p1))), 16));
    p_Val2_4_0_2_i_fu_1307_p0 <= p_Val2_4_0_2_i_fu_1307_p00(8 - 1 downto 0);
    p_Val2_4_0_2_i_fu_1307_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_0_reg_1919),16));
    p_Val2_4_0_2_i_fu_1307_p1 <= OP2_V_0_2_i_reg_1727(8 - 1 downto 0);
    p_Val2_4_0_2_i_fu_1307_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_0_2_i_fu_1307_p0) * signed(p_Val2_4_0_2_i_fu_1307_p1))), 16));
    p_Val2_4_0_i_fu_1276_p0 <= p_Val2_4_0_i_fu_1276_p00(8 - 1 downto 0);
    p_Val2_4_0_i_fu_1276_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_1_fu_166),16));
    p_Val2_4_0_i_fu_1276_p1 <= OP2_V_0_i_reg_1717(8 - 1 downto 0);
    p_Val2_4_0_i_fu_1276_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_0_i_fu_1276_p0) * signed(p_Val2_4_0_i_fu_1276_p1))), 16));
    p_Val2_4_1_1_i_fu_1339_p0 <= p_Val2_4_1_1_i_fu_1339_p00(8 - 1 downto 0);
    p_Val2_4_1_1_i_fu_1339_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_1_1_fu_154),16));
    p_Val2_4_1_1_i_fu_1339_p1 <= OP2_V_1_1_i_reg_1737(8 - 1 downto 0);
    p_Val2_4_1_1_i_fu_1339_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_1_1_i_fu_1339_p0) * signed(p_Val2_4_1_1_i_fu_1339_p1))), 16));
    p_Val2_4_1_2_i_fu_1347_p0 <= p_Val2_4_1_2_i_fu_1347_p00(8 - 1 downto 0);
    p_Val2_4_1_2_i_fu_1347_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_1_0_reg_1913),16));
    p_Val2_4_1_2_i_fu_1347_p1 <= OP2_V_1_2_i_reg_1742(8 - 1 downto 0);
    p_Val2_4_1_2_i_fu_1347_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_1_2_i_fu_1347_p0) * signed(p_Val2_4_1_2_i_fu_1347_p1))), 16));
    p_Val2_4_1_i_fu_1320_p0 <= p_Val2_4_1_i_fu_1320_p00(8 - 1 downto 0);
    p_Val2_4_1_i_fu_1320_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_1_1_1_fu_158),16));
    p_Val2_4_1_i_fu_1320_p1 <= OP2_V_1_i_reg_1732(8 - 1 downto 0);
    p_Val2_4_1_i_fu_1320_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_1_i_fu_1320_p0) * signed(p_Val2_4_1_i_fu_1320_p1))), 16));
    p_Val2_4_2_1_i_fu_1232_p0 <= p_Val2_4_2_1_i_fu_1232_p00(8 - 1 downto 0);
    p_Val2_4_2_1_i_fu_1232_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_fu_146),16));
    p_Val2_4_2_1_i_fu_1232_p1 <= OP2_V_2_1_i_reg_1752(8 - 1 downto 0);
    p_Val2_4_2_1_i_fu_1232_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_2_1_i_fu_1232_p0) * signed(p_Val2_4_2_1_i_fu_1232_p1))), 16));
    p_Val2_4_2_2_i_fu_1430_p0 <= p_Val2_4_2_2_i_fu_1430_p00(8 - 1 downto 0);
    p_Val2_4_2_2_i_fu_1430_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1908_pp0_it3),16));
    p_Val2_4_2_2_i_fu_1430_p1 <= OP2_V_2_2_i_reg_1757(8 - 1 downto 0);
    p_Val2_4_2_2_i_fu_1430_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_2_2_i_fu_1430_p0) * signed(p_Val2_4_2_2_i_fu_1430_p1))), 16));
    p_Val2_4_2_i_fu_1219_p0 <= p_Val2_4_2_i_fu_1219_p00(8 - 1 downto 0);
    p_Val2_4_2_i_fu_1219_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_1_fu_150),16));
    p_Val2_4_2_i_fu_1219_p1 <= OP2_V_2_i_reg_1747(8 - 1 downto 0);
    p_Val2_4_2_i_fu_1219_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_2_i_fu_1219_p0) * signed(p_Val2_4_2_i_fu_1219_p1))), 16));
        p_Val2_7_0_1_cast_i_fu_1389_p1 <= std_logic_vector(resize(signed(p_Val2_7_0_1_i_reg_1930),18));

    p_Val2_7_0_1_i_fu_1298_p2 <= std_logic_vector(signed(tmp_145_0_1_cast_i_fu_1294_p1) + signed(tmp_145_0_cast_i_fu_1281_p1));
        p_Val2_7_1_cast_i_fu_1401_p1 <= std_logic_vector(resize(signed(p_Val2_7_1_i_fu_1395_p2),19));

    p_Val2_7_1_i_fu_1395_p2 <= std_logic_vector(signed(p_Val2_7_0_1_cast_i_fu_1389_p1) + signed(tmp9_cast_fu_1392_p1));
        p_Val2_7_2_1_cast_i_fu_1423_p1 <= std_logic_vector(resize(signed(p_Val2_7_2_1_i_fu_1417_p2),20));

    p_Val2_7_2_1_i_fu_1417_p2 <= std_logic_vector(unsigned(tmp10_fu_1408_p2) + unsigned(tmp11_cast_fu_1414_p1));
    p_Val2_s_fu_1496_p3 <= 
        p_mux_i_i_cast_i_fu_1483_p3 when (tmp_i_i_i_fu_1491_p2(0) = '1') else 
        p_Val2_2_reg_1956;
    p_anchor_2_1_cast_i_fu_394_p1 <= std_logic_vector(resize(unsigned(not_tmp_76_i_fu_389_p2),13));
    p_assign_1_fu_962_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_15_cast_i_fu_879_p1));
    p_assign_2_fu_997_p2 <= std_logic_vector(unsigned(tmp_26_i_reg_1707) - unsigned(p_p2_i_i_cast_i_fu_994_p1));
    p_assign_6_1_i_fu_603_p2 <= std_logic_vector(signed(ap_const_lv13_1FFE) + signed(tmp_11_cast_i_fu_475_p1));
    p_assign_6_2_i_fu_668_p2 <= std_logic_vector(signed(ap_const_lv13_1FFD) + signed(tmp_11_cast_i_fu_475_p1));
    p_assign_7_1_i_fu_642_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) - unsigned(tmp_11_cast_i_fu_475_p1));
    p_assign_7_2_i_fu_707_p2 <= std_logic_vector(unsigned(ap_const_lv13_3) - unsigned(tmp_11_cast_i_fu_475_p1));
    p_assign_7_i_fu_577_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_11_cast_i_fu_475_p1));
    p_dst_data_stream_V_din <= p_Val2_s_reg_1966;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1879_pp0_it5)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_i_fu_1483_p3 <= 
        ap_const_lv8_FF when (tmp_2_i_i_i_fu_1467_p2(0) = '1') else 
        ap_const_lv8_0;
    p_neg392_i_cast_i_fu_380_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_fu_377_p1));
    p_p2_i413_i_1_i_fu_648_p3 <= 
        p_assign_7_1_i_fu_642_p2 when (tmp_28_fu_634_p3(0) = '1') else 
        p_assign_6_1_i_fu_603_p2;
    p_p2_i413_i_2_i_fu_713_p3 <= 
        p_assign_7_2_i_fu_707_p2 when (tmp_33_fu_699_p3(0) = '1') else 
        p_assign_6_2_i_fu_668_p2;
    p_p2_i413_i_i_fu_583_p3 <= 
        p_assign_7_i_fu_577_p2 when (tmp_18_fu_569_p3(0) = '1') else 
        tmp_123_i_fu_538_p2;
        p_p2_i_i_cast_i_fu_994_p1 <= std_logic_vector(resize(signed(p_p2_i_i_i_reg_1862),14));

    p_p2_i_i_i_fu_968_p3 <= 
        p_assign_1_fu_962_p2 when (tmp_47_fu_954_p3(0) = '1') else 
        ImagLoc_x_fu_910_p2;

    -- p_src_cols_V_read assign process. --
    p_src_cols_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_68)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_68))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(tmp_14_i_reg_1770, icmp_reg_1779, ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1, ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1, ap_sig_bdd_227, ap_reg_ppiten_pp0_it2, ap_sig_bdd_243, ap_reg_ppiten_pp0_it6)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and (ap_const_lv1_0 = icmp_reg_1779) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_16_i_reg_1838_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_i_reg_1847_pp0_it1)) and not((ap_const_lv1_0 = icmp_reg_1779)) and not((ap_const_lv1_0 = tmp_14_i_reg_1770)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_243 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_rows_V_read assign process. --
    p_src_rows_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_68)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_68))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_552_p2 <= (tmp_16_fu_544_p3 xor ap_const_lv1_1);
    rev2_fu_617_p2 <= (tmp_27_fu_609_p3 xor ap_const_lv1_1);
    rev3_fu_682_p2 <= (tmp_32_fu_674_p3 xor ap_const_lv1_1);
    rev4_fu_924_p2 <= (tmp_46_fu_916_p3 xor ap_const_lv1_1);
    rev_fu_862_p2 <= (ult_reg_1774 xor ap_const_lv1_1);
    row_assign_8_1_t_i_fu_871_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_i_reg_1676) - unsigned(tmp_6_reg_1808));
    row_assign_8_2_t_i_fu_875_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_i_reg_1676) - unsigned(tmp_14_reg_1813));
    row_assign_8_i_fu_867_p2 <= std_logic_vector(unsigned(p_neg392_i_cast_i_reg_1676) - unsigned(tmp_2_reg_1803));
    rows_cast_i_fu_353_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_dout),13));
    sel_tmp7_fu_1009_p2 <= (brmerge_reg_1851 xor ap_const_lv1_1);
    sel_tmp8_fu_1014_p2 <= (tmp_24_i_reg_1867 and sel_tmp7_fu_1009_p2);
    sel_tmp_fu_1002_p3 <= 
        ImagLoc_x_cast_i_mux_cast_fu_991_p1 when (brmerge_reg_1851(0) = '1') else 
        p_assign_2_fu_997_p2;
    src_kernel_win_0_val_0_0_fu_1166_p3 <= 
        tmp_15_fu_1155_p5 when (tmp_120_i_reg_1796(0) = '1') else 
        col_buf_0_val_0_0_fu_1076_p3;
    src_kernel_win_0_val_1_0_fu_1184_p3 <= 
        tmp_17_fu_1173_p5 when (tmp_120_i_reg_1796(0) = '1') else 
        col_buf_0_val_1_0_fu_1094_p3;
    src_kernel_win_0_val_2_0_fu_1202_p3 <= 
        tmp_19_fu_1191_p5 when (tmp_120_i_reg_1796(0) = '1') else 
        col_buf_0_val_2_0_fu_1112_p3;
    tmp10_fu_1408_p2 <= std_logic_vector(signed(tmp_145_1_1_cast_i_fu_1405_p1) + signed(p_Val2_7_1_cast_i_fu_1401_p1));
        tmp11_cast_fu_1414_p1 <= std_logic_vector(resize(signed(tmp11_reg_1945),19));

    tmp11_fu_1359_p2 <= std_logic_vector(signed(tmp_145_1_2_cast_i_cast_fu_1352_p1) + signed(tmp12_cast_fu_1356_p1));
        tmp12_cast_fu_1356_p1 <= std_logic_vector(resize(signed(tmp12_reg_1925),18));

    tmp12_fu_1241_p2 <= std_logic_vector(signed(tmp_145_2_1_cast_i_cast_fu_1237_p1) + signed(tmp_145_2_cast_i_cast_fu_1224_p1));
        tmp9_cast_fu_1392_p1 <= std_logic_vector(resize(signed(tmp9_reg_1935),18));

    tmp9_fu_1329_p2 <= std_logic_vector(signed(tmp_145_1_cast_i_cast_fu_1325_p1) + signed(tmp_145_0_2_cast_i_cast_fu_1312_p1));
    tmp_11_cast_i_fu_475_p1 <= std_logic_vector(resize(unsigned(p_014_0_i_i_reg_331),13));
    tmp_11_fu_386_p1 <= p_src_cols_V_read_reg_1570(2 - 1 downto 0);
    tmp_120_i_fu_533_p2 <= "1" when (unsigned(p_014_0_i_i_reg_331) > unsigned(p_src_rows_V_read_reg_1548)) else "0";
    tmp_123_i_fu_538_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_11_cast_i_fu_475_p1));
    tmp_125_1_i_fu_623_p2 <= "1" when (signed(p_assign_6_1_i_fu_603_p2) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_125_2_i_fu_688_p2 <= "1" when (signed(p_assign_6_2_i_fu_668_p2) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_125_i_fu_558_p2 <= "1" when (signed(tmp_123_i_fu_538_p2) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_129_i_fu_398_p2 <= "1" when (p_src_rows_V_read_reg_1548 = ap_const_lv12_1) else "0";
    tmp_12_fu_500_p4 <= p_014_0_i_i_reg_331(11 downto 1);
    tmp_12_i_fu_479_p2 <= "1" when (unsigned(tmp_11_cast_i_fu_475_p1) < unsigned(heightloop_reg_1666)) else "0";
    tmp_137_1_i_fu_656_p2 <= "1" when (signed(p_p2_i413_i_1_i_fu_648_p3) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_137_2_i_fu_721_p2 <= "1" when (signed(p_p2_i413_i_2_i_fu_713_p3) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_137_i_fu_591_p2 <= "1" when (signed(p_p2_i413_i_i_fu_583_p3) < signed(rows_cast_i_reg_1559)) else "0";
    tmp_139_cast_i_fu_410_p1 <= std_logic_vector(resize(unsigned(tmp_139_i_fu_403_p3),14));
    tmp_139_i_fu_403_p3 <= (p_src_rows_V_read_reg_1548 & ap_const_lv1_0);
    tmp_13_fu_846_p3 <= 
        tmp_43_fu_836_p1 when (tmp_137_2_i_fu_721_p2(0) = '1') else 
        tmp_44_fu_840_p2;
    tmp_140_i_fu_414_p2 <= std_logic_vector(unsigned(ap_const_lv14_2) + unsigned(tmp_139_cast_i_fu_410_p1));
        tmp_145_0_1_cast_i_fu_1294_p1 <= std_logic_vector(resize(signed(p_Val2_4_0_1_i_fu_1289_p2),17));

        tmp_145_0_2_cast_i_cast_fu_1312_p1 <= std_logic_vector(resize(signed(p_Val2_4_0_2_i_fu_1307_p2),17));

        tmp_145_0_cast_i_fu_1281_p1 <= std_logic_vector(resize(signed(p_Val2_4_0_i_fu_1276_p2),17));

        tmp_145_1_1_cast_i_fu_1405_p1 <= std_logic_vector(resize(signed(p_Val2_4_1_1_i_reg_1940),19));

        tmp_145_1_2_cast_i_cast_fu_1352_p1 <= std_logic_vector(resize(signed(p_Val2_4_1_2_i_fu_1347_p2),18));

        tmp_145_1_cast_i_cast_fu_1325_p1 <= std_logic_vector(resize(signed(p_Val2_4_1_i_fu_1320_p2),17));

        tmp_145_2_1_cast_i_cast_fu_1237_p1 <= std_logic_vector(resize(signed(p_Val2_4_2_1_i_fu_1232_p2),17));

        tmp_145_2_2_i_fu_1435_p1 <= std_logic_vector(resize(signed(p_Val2_4_2_2_i_fu_1430_p2),20));

        tmp_145_2_cast_i_cast_fu_1224_p1 <= std_logic_vector(resize(signed(p_Val2_4_2_i_fu_1219_p2),17));

    tmp_14_fu_854_p3 <= 
        tmp_7_fu_828_p3 when (brmerge3_fu_819_p2(0) = '1') else 
        tmp_13_fu_846_p3;
    tmp_14_i_fu_490_p2 <= "1" when (unsigned(p_014_0_i_i_reg_331) < unsigned(p_src_rows_V_read_reg_1548)) else "0";
    tmp_15_cast_i_fu_879_p1 <= std_logic_vector(resize(unsigned(p_027_0_i_i_reg_342),13));
    tmp_16_fu_544_p3 <= tmp_123_i_fu_538_p2(12 downto 12);
    tmp_16_i_fu_883_p2 <= "1" when (unsigned(tmp_15_cast_i_fu_879_p1) < unsigned(widthloop_reg_1671)) else "0";
    tmp_18_fu_569_p3 <= tmp_123_i_fu_538_p2(12 downto 12);
    tmp_1_fu_742_p3 <= 
        tmp_36_fu_738_p1 when (or_cond_i412_i_i_fu_563_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_21_fu_596_p1 <= tmp_140_i_reg_1695(2 - 1 downto 0);
    tmp_21_i_fu_930_p2 <= "1" when (signed(ImagLoc_x_fu_910_p2) < signed(cols_cast_i_reg_1577)) else "0";
    tmp_22_i_fu_420_p2 <= "1" when (p_src_cols_V_read_reg_1570 = ap_const_lv12_1) else "0";
    tmp_23_fu_599_p1 <= p_p2_i413_i_i_fu_583_p3(2 - 1 downto 0);
    tmp_24_i_fu_976_p2 <= "1" when (signed(p_p2_i_i_i_fu_968_p3) < signed(cols_cast_i_reg_1577)) else "0";
    tmp_25_cast_i_fu_432_p1 <= std_logic_vector(resize(unsigned(tmp_25_i_fu_425_p3),14));
    tmp_25_i_fu_425_p3 <= (p_src_cols_V_read_reg_1570 & ap_const_lv1_0);
    tmp_26_i_fu_436_p2 <= std_logic_vector(signed(ap_const_lv14_3FFE) + signed(tmp_25_cast_i_fu_432_p1));
    tmp_27_fu_609_p3 <= p_assign_6_1_i_fu_603_p2(12 downto 12);
    tmp_28_fu_634_p3 <= p_assign_6_1_i_fu_603_p2(12 downto 12);
    tmp_2_fu_768_p3 <= 
        tmp_1_fu_742_p3 when (brmerge1_fu_733_p2(0) = '1') else 
        tmp_s_fu_760_p3;
    tmp_2_i_i_i_fu_1467_p2 <= (isneg_reg_1950 xor ap_const_lv1_1);
    tmp_30_fu_661_p1 <= tmp_140_i_reg_1695(2 - 1 downto 0);
    tmp_31_fu_664_p1 <= p_p2_i413_i_1_i_fu_648_p3(2 - 1 downto 0);
    tmp_32_fu_674_p3 <= p_assign_6_2_i_fu_668_p2(12 downto 12);
    tmp_33_fu_699_p3 <= p_assign_6_2_i_fu_668_p2(12 downto 12);
    tmp_34_fu_726_p1 <= tmp_140_i_reg_1695(2 - 1 downto 0);
    tmp_35_fu_729_p1 <= p_p2_i413_i_2_i_fu_713_p3(2 - 1 downto 0);
    tmp_36_fu_738_p1 <= tmp_123_i_fu_538_p2(2 - 1 downto 0);
    tmp_37_fu_750_p1 <= p_p2_i413_i_i_fu_583_p3(2 - 1 downto 0);
    tmp_38_fu_754_p2 <= std_logic_vector(unsigned(tmp_21_fu_596_p1) - unsigned(tmp_23_fu_599_p1));
    tmp_39_fu_781_p1 <= p_assign_6_1_i_fu_603_p2(2 - 1 downto 0);
    tmp_3_fu_785_p3 <= 
        tmp_39_fu_781_p1 when (or_cond_i412_i_1_i_fu_628_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_3_i_phi_fu_324_p4 <= tmp_3_i_reg_320;
    tmp_40_fu_793_p1 <= p_p2_i413_i_1_i_fu_648_p3(2 - 1 downto 0);
    tmp_41_fu_797_p2 <= std_logic_vector(unsigned(tmp_30_fu_661_p1) - unsigned(tmp_31_fu_664_p1));
    tmp_42_fu_824_p1 <= p_assign_6_2_i_fu_668_p2(2 - 1 downto 0);
    tmp_43_fu_836_p1 <= p_p2_i413_i_2_i_fu_713_p3(2 - 1 downto 0);
    tmp_44_fu_840_p2 <= std_logic_vector(unsigned(tmp_34_fu_726_p1) - unsigned(tmp_35_fu_729_p1));
    tmp_45_fu_894_p4 <= p_027_0_i_i_reg_342(11 downto 1);
    tmp_46_fu_916_p3 <= ImagLoc_x_fu_910_p2(12 downto 12);
    tmp_47_fu_954_p3 <= ImagLoc_x_fu_910_p2(12 downto 12);
    tmp_48_fu_1031_p1 <= x_fu_1019_p3(2 - 1 downto 0);
    tmp_4_fu_803_p3 <= 
        tmp_40_fu_793_p1 when (tmp_137_1_i_fu_656_p2(0) = '1') else 
        tmp_41_fu_797_p2;
    tmp_4_i_fu_361_p2 <= (tmp_3_i_reg_320 xor ap_const_lv1_1);
    tmp_5_fu_442_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_11_fu_386_p1));
    tmp_63_i_fu_1035_p1 <= std_logic_vector(resize(unsigned(col_assign_cast_i_fu_1027_p1),64));
    tmp_6_fu_811_p3 <= 
        tmp_3_fu_785_p3 when (brmerge2_fu_776_p2(0) = '1') else 
        tmp_4_fu_803_p3;
    tmp_7_fu_828_p3 <= 
        tmp_42_fu_824_p1 when (or_cond_i412_i_2_i_fu_693_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_98_1_i_fu_521_p2 <= "1" when (p_014_0_i_i_reg_331 = ap_const_lv12_0) else "0";
    tmp_98_2_i_fu_527_p2 <= "1" when (p_014_0_i_i_reg_331 = ap_const_lv12_1) else "0";
    tmp_98_i_fu_516_p2 <= "1" when (p_anchor_2_1_cast_i_reg_1683 = tmp_11_cast_i_fu_475_p1) else "0";
    tmp_fu_377_p1 <= p_src_rows_V_read_reg_1548(2 - 1 downto 0);
    tmp_i_i_i_fu_1491_p2 <= (isneg_reg_1950 or overflow_fu_1477_p2);
    tmp_s_fu_760_p3 <= 
        tmp_37_fu_750_p1 when (tmp_137_i_fu_591_p2(0) = '1') else 
        tmp_38_fu_754_p2;
    ult_fu_495_p2 <= "1" when (unsigned(p_014_0_i_i_reg_331) < unsigned(p_src_rows_V_read_reg_1548)) else "0";
    widthloop_fu_372_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(cols_cast_i_reg_1577));
    x_fu_1019_p3 <= 
        p_p2_i_i_cast_i_fu_994_p1 when (sel_tmp8_fu_1014_p2(0) = '1') else 
        sel_tmp_fu_1002_p3;
end behav;
