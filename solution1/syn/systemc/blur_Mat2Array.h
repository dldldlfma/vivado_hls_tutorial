// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _blur_Mat2Array_HH_
#define _blur_Mat2Array_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct blur_Mat2Array : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > img_data_stream_V_dout;
    sc_in< sc_logic > img_data_stream_V_empty_n;
    sc_out< sc_logic > img_data_stream_V_read;
    sc_out< sc_logic > m_axi_fb_AWVALID;
    sc_in< sc_logic > m_axi_fb_AWREADY;
    sc_out< sc_lv<32> > m_axi_fb_AWADDR;
    sc_out< sc_lv<1> > m_axi_fb_AWID;
    sc_out< sc_lv<32> > m_axi_fb_AWLEN;
    sc_out< sc_lv<3> > m_axi_fb_AWSIZE;
    sc_out< sc_lv<2> > m_axi_fb_AWBURST;
    sc_out< sc_lv<2> > m_axi_fb_AWLOCK;
    sc_out< sc_lv<4> > m_axi_fb_AWCACHE;
    sc_out< sc_lv<3> > m_axi_fb_AWPROT;
    sc_out< sc_lv<4> > m_axi_fb_AWQOS;
    sc_out< sc_lv<4> > m_axi_fb_AWREGION;
    sc_out< sc_lv<1> > m_axi_fb_AWUSER;
    sc_out< sc_logic > m_axi_fb_WVALID;
    sc_in< sc_logic > m_axi_fb_WREADY;
    sc_out< sc_lv<8> > m_axi_fb_WDATA;
    sc_out< sc_lv<1> > m_axi_fb_WSTRB;
    sc_out< sc_logic > m_axi_fb_WLAST;
    sc_out< sc_lv<1> > m_axi_fb_WID;
    sc_out< sc_lv<1> > m_axi_fb_WUSER;
    sc_out< sc_logic > m_axi_fb_ARVALID;
    sc_in< sc_logic > m_axi_fb_ARREADY;
    sc_out< sc_lv<32> > m_axi_fb_ARADDR;
    sc_out< sc_lv<1> > m_axi_fb_ARID;
    sc_out< sc_lv<32> > m_axi_fb_ARLEN;
    sc_out< sc_lv<3> > m_axi_fb_ARSIZE;
    sc_out< sc_lv<2> > m_axi_fb_ARBURST;
    sc_out< sc_lv<2> > m_axi_fb_ARLOCK;
    sc_out< sc_lv<4> > m_axi_fb_ARCACHE;
    sc_out< sc_lv<3> > m_axi_fb_ARPROT;
    sc_out< sc_lv<4> > m_axi_fb_ARQOS;
    sc_out< sc_lv<4> > m_axi_fb_ARREGION;
    sc_out< sc_lv<1> > m_axi_fb_ARUSER;
    sc_in< sc_logic > m_axi_fb_RVALID;
    sc_out< sc_logic > m_axi_fb_RREADY;
    sc_in< sc_lv<8> > m_axi_fb_RDATA;
    sc_in< sc_logic > m_axi_fb_RLAST;
    sc_in< sc_lv<1> > m_axi_fb_RID;
    sc_in< sc_lv<1> > m_axi_fb_RUSER;
    sc_in< sc_lv<2> > m_axi_fb_RRESP;
    sc_in< sc_logic > m_axi_fb_BVALID;
    sc_out< sc_logic > m_axi_fb_BREADY;
    sc_in< sc_lv<2> > m_axi_fb_BRESP;
    sc_in< sc_lv<1> > m_axi_fb_BID;
    sc_in< sc_lv<1> > m_axi_fb_BUSER;
    sc_in< sc_lv<32> > image_out1;


    // Module declarations
    blur_Mat2Array(sc_module_name name);
    SC_HAS_PROCESS(blur_Mat2Array);

    ~blur_Mat2Array();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_27;
    sc_signal< sc_lv<11> > p_1_reg_110;
    sc_signal< sc_lv<46> > sext_cast_fu_121_p1;
    sc_signal< sc_lv<46> > sext_cast_reg_202;
    sc_signal< sc_lv<11> > row_V_fu_131_p2;
    sc_signal< sc_lv<11> > row_V_reg_210;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< sc_lv<32> > fb_addr_reg_215;
    sc_signal< sc_lv<1> > exitcond1_fu_125_p2;
    sc_signal< sc_lv<1> > exitcond_fu_190_p2;
    sc_signal< sc_lv<1> > exitcond_reg_220;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_3;
    sc_signal< bool > ap_sig_bdd_120;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_127;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_220_pp0_it1;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_fb_WREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<11> > col_V_fu_196_p2;
    sc_signal< sc_lv<8> > tmp_7_reg_229;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_155;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_fb_AWREADY;
    sc_signal< sc_lv<11> > p_s_reg_99;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_8;
    sc_signal< bool > ap_sig_bdd_174;
    sc_signal< sc_lv<64> > tmp_5_fu_180_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_fb_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_fb_WREADY;
    sc_signal< sc_lv<22> > p_shl_fu_137_p3;
    sc_signal< sc_lv<18> > p_shl2_fu_149_p3;
    sc_signal< sc_lv<23> > p_shl_cast_fu_145_p1;
    sc_signal< sc_lv<23> > p_shl2_cast_fu_157_p1;
    sc_signal< sc_lv<23> > r_V_fu_161_p2;
    sc_signal< sc_lv<44> > r_V_cast_fu_167_p1;
    sc_signal< sc_lv<46> > tmp_1_fu_171_p1;
    sc_signal< sc_lv<46> > tmp_4_fu_175_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_292;
    sc_signal< bool > ap_sig_bdd_291;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_st1_fsm_0;
    static const sc_lv<9> ap_ST_st2_fsm_1;
    static const sc_lv<9> ap_ST_st3_fsm_2;
    static const sc_lv<9> ap_ST_pp0_stg0_fsm_3;
    static const sc_lv<9> ap_ST_st7_fsm_4;
    static const sc_lv<9> ap_ST_st8_fsm_5;
    static const sc_lv<9> ap_ST_st9_fsm_6;
    static const sc_lv<9> ap_ST_st10_fsm_7;
    static const sc_lv<9> ap_ST_st11_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_780;
    static const sc_lv<11> ap_const_lv11_438;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<11> ap_const_lv11_780;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_120();
    void thread_ap_sig_bdd_127();
    void thread_ap_sig_bdd_155();
    void thread_ap_sig_bdd_174();
    void thread_ap_sig_bdd_27();
    void thread_ap_sig_bdd_291();
    void thread_ap_sig_bdd_292();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_3();
    void thread_ap_sig_cseq_ST_st11_fsm_8();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_ioackin_m_axi_fb_AWREADY();
    void thread_ap_sig_ioackin_m_axi_fb_WREADY();
    void thread_col_V_fu_196_p2();
    void thread_exitcond1_fu_125_p2();
    void thread_exitcond_fu_190_p2();
    void thread_img_data_stream_V_read();
    void thread_m_axi_fb_ARADDR();
    void thread_m_axi_fb_ARBURST();
    void thread_m_axi_fb_ARCACHE();
    void thread_m_axi_fb_ARID();
    void thread_m_axi_fb_ARLEN();
    void thread_m_axi_fb_ARLOCK();
    void thread_m_axi_fb_ARPROT();
    void thread_m_axi_fb_ARQOS();
    void thread_m_axi_fb_ARREGION();
    void thread_m_axi_fb_ARSIZE();
    void thread_m_axi_fb_ARUSER();
    void thread_m_axi_fb_ARVALID();
    void thread_m_axi_fb_AWADDR();
    void thread_m_axi_fb_AWBURST();
    void thread_m_axi_fb_AWCACHE();
    void thread_m_axi_fb_AWID();
    void thread_m_axi_fb_AWLEN();
    void thread_m_axi_fb_AWLOCK();
    void thread_m_axi_fb_AWPROT();
    void thread_m_axi_fb_AWQOS();
    void thread_m_axi_fb_AWREGION();
    void thread_m_axi_fb_AWSIZE();
    void thread_m_axi_fb_AWUSER();
    void thread_m_axi_fb_AWVALID();
    void thread_m_axi_fb_BREADY();
    void thread_m_axi_fb_RREADY();
    void thread_m_axi_fb_WDATA();
    void thread_m_axi_fb_WID();
    void thread_m_axi_fb_WLAST();
    void thread_m_axi_fb_WSTRB();
    void thread_m_axi_fb_WUSER();
    void thread_m_axi_fb_WVALID();
    void thread_p_shl2_cast_fu_157_p1();
    void thread_p_shl2_fu_149_p3();
    void thread_p_shl_cast_fu_145_p1();
    void thread_p_shl_fu_137_p3();
    void thread_r_V_cast_fu_167_p1();
    void thread_r_V_fu_161_p2();
    void thread_row_V_fu_131_p2();
    void thread_sext_cast_fu_121_p1();
    void thread_tmp_1_fu_171_p1();
    void thread_tmp_4_fu_175_p2();
    void thread_tmp_5_fu_180_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
