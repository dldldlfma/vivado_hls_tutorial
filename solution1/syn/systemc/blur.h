// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _blur_HH_
#define _blur_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "blur_Block_proc9.h"
#include "blur_AXIM2Mat.h"
#include "blur_Loop_1_proc.h"
#include "blur_Filter2D.h"
#include "blur_Mat2AXIM.h"
#include "FIFO_blur_src_rows_V_channel.h"
#include "FIFO_blur_src_cols_V_channel.h"
#include "FIFO_blur_image_in_channel.h"
#include "FIFO_blur_image_out_channel.h"
#include "FIFO_blur_src_data_stream_0_V.h"
#include "FIFO_blur_src_rows_V_channel38.h"
#include "FIFO_blur_src_cols_V_channel39.h"
#include "FIFO_blur_kernel_val_0_0_channel.h"
#include "FIFO_blur_kernel_val_0_1_channel.h"
#include "FIFO_blur_kernel_val_0_2_channel.h"
#include "FIFO_blur_kernel_val_1_0_channel.h"
#include "FIFO_blur_kernel_val_1_1_channel.h"
#include "FIFO_blur_kernel_val_1_2_channel.h"
#include "FIFO_blur_kernel_val_2_0_channel.h"
#include "FIFO_blur_kernel_val_2_1_channel.h"
#include "FIFO_blur_kernel_val_2_2_channel.h"
#include "FIFO_blur_dst_data_stream_0_V.h"
#include "blur_AXILiteS_s_axi.h"
#include "blur_CRTL_BUS_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_ID_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_CRTL_BUS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_CRTL_BUS_BUSER_WIDTH = 1>
struct blur : public sc_module {
    // Port declarations 68
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_CRTL_BUS_AWVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_AWREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ADDR_WIDTH> > m_axi_CRTL_BUS_AWADDR;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_AWID;
    sc_out< sc_lv<8> > m_axi_CRTL_BUS_AWLEN;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_AWSIZE;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_AWBURST;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_AWLOCK;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWCACHE;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_AWPROT;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWQOS;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_AWREGION;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_AWUSER_WIDTH> > m_axi_CRTL_BUS_AWUSER;
    sc_out< sc_logic > m_axi_CRTL_BUS_WVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_WREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH> > m_axi_CRTL_BUS_WDATA;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH/8> > m_axi_CRTL_BUS_WSTRB;
    sc_out< sc_logic > m_axi_CRTL_BUS_WLAST;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_WID;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_WUSER_WIDTH> > m_axi_CRTL_BUS_WUSER;
    sc_out< sc_logic > m_axi_CRTL_BUS_ARVALID;
    sc_in< sc_logic > m_axi_CRTL_BUS_ARREADY;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ADDR_WIDTH> > m_axi_CRTL_BUS_ARADDR;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_ARID;
    sc_out< sc_lv<8> > m_axi_CRTL_BUS_ARLEN;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_ARSIZE;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_ARBURST;
    sc_out< sc_lv<2> > m_axi_CRTL_BUS_ARLOCK;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARCACHE;
    sc_out< sc_lv<3> > m_axi_CRTL_BUS_ARPROT;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARQOS;
    sc_out< sc_lv<4> > m_axi_CRTL_BUS_ARREGION;
    sc_out< sc_uint<C_M_AXI_CRTL_BUS_ARUSER_WIDTH> > m_axi_CRTL_BUS_ARUSER;
    sc_in< sc_logic > m_axi_CRTL_BUS_RVALID;
    sc_out< sc_logic > m_axi_CRTL_BUS_RREADY;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_DATA_WIDTH> > m_axi_CRTL_BUS_RDATA;
    sc_in< sc_logic > m_axi_CRTL_BUS_RLAST;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_RID;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_RUSER_WIDTH> > m_axi_CRTL_BUS_RUSER;
    sc_in< sc_lv<2> > m_axi_CRTL_BUS_RRESP;
    sc_in< sc_logic > m_axi_CRTL_BUS_BVALID;
    sc_out< sc_logic > m_axi_CRTL_BUS_BREADY;
    sc_in< sc_lv<2> > m_axi_CRTL_BUS_BRESP;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_ID_WIDTH> > m_axi_CRTL_BUS_BID;
    sc_in< sc_uint<C_M_AXI_CRTL_BUS_BUSER_WIDTH> > m_axi_CRTL_BUS_BUSER;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;


    // Module declarations
    blur(sc_module_name name);
    SC_HAS_PROCESS(blur);

    ~blur();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    blur_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* blur_AXILiteS_s_axi_U;
    blur_CRTL_BUS_m_axi<8,32,5,C_M_AXI_CRTL_BUS_ID_WIDTH,C_M_AXI_CRTL_BUS_ADDR_WIDTH,C_M_AXI_CRTL_BUS_DATA_WIDTH,C_M_AXI_CRTL_BUS_AWUSER_WIDTH,C_M_AXI_CRTL_BUS_ARUSER_WIDTH,C_M_AXI_CRTL_BUS_WUSER_WIDTH,C_M_AXI_CRTL_BUS_RUSER_WIDTH,C_M_AXI_CRTL_BUS_BUSER_WIDTH,C_M_AXI_CRTL_BUS_USER_VALUE,C_M_AXI_CRTL_BUS_PROT_VALUE,C_M_AXI_CRTL_BUS_CACHE_VALUE>* blur_CRTL_BUS_m_axi_U;
    blur_Block_proc9* blur_Block_proc9_U0;
    blur_AXIM2Mat* blur_AXIM2Mat_U0;
    blur_Loop_1_proc* blur_Loop_1_proc_U0;
    blur_Filter2D* blur_Filter2D_U0;
    blur_Mat2AXIM* blur_Mat2AXIM_U0;
    FIFO_blur_src_rows_V_channel* src_rows_V_channel_U;
    FIFO_blur_src_cols_V_channel* src_cols_V_channel_U;
    FIFO_blur_image_in_channel* image_in_channel_U;
    FIFO_blur_image_out_channel* image_out_channel_U;
    FIFO_blur_src_data_stream_0_V* src_data_stream_0_V_U;
    FIFO_blur_src_rows_V_channel38* src_rows_V_channel38_U;
    FIFO_blur_src_cols_V_channel39* src_cols_V_channel39_U;
    FIFO_blur_kernel_val_0_0_channel* kernel_val_0_0_channel_U;
    FIFO_blur_kernel_val_0_1_channel* kernel_val_0_1_channel_U;
    FIFO_blur_kernel_val_0_2_channel* kernel_val_0_2_channel_U;
    FIFO_blur_kernel_val_1_0_channel* kernel_val_1_0_channel_U;
    FIFO_blur_kernel_val_1_1_channel* kernel_val_1_1_channel_U;
    FIFO_blur_kernel_val_1_2_channel* kernel_val_1_2_channel_U;
    FIFO_blur_kernel_val_2_0_channel* kernel_val_2_0_channel_U;
    FIFO_blur_kernel_val_2_1_channel* kernel_val_2_1_channel_U;
    FIFO_blur_kernel_val_2_2_channel* kernel_val_2_2_channel_U;
    FIFO_blur_dst_data_stream_0_V* dst_data_stream_0_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > blur_AXILiteS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > image_in;
    sc_signal< sc_lv<32> > image_out;
    sc_signal< sc_logic > CRTL_BUS_AWVALID;
    sc_signal< sc_logic > CRTL_BUS_AWREADY;
    sc_signal< sc_lv<32> > CRTL_BUS_AWADDR;
    sc_signal< sc_lv<1> > CRTL_BUS_AWID;
    sc_signal< sc_lv<32> > CRTL_BUS_AWLEN;
    sc_signal< sc_lv<3> > CRTL_BUS_AWSIZE;
    sc_signal< sc_lv<2> > CRTL_BUS_AWBURST;
    sc_signal< sc_lv<2> > CRTL_BUS_AWLOCK;
    sc_signal< sc_lv<4> > CRTL_BUS_AWCACHE;
    sc_signal< sc_lv<3> > CRTL_BUS_AWPROT;
    sc_signal< sc_lv<4> > CRTL_BUS_AWQOS;
    sc_signal< sc_lv<4> > CRTL_BUS_AWREGION;
    sc_signal< sc_lv<1> > CRTL_BUS_AWUSER;
    sc_signal< sc_logic > CRTL_BUS_WVALID;
    sc_signal< sc_logic > CRTL_BUS_WREADY;
    sc_signal< sc_lv<8> > CRTL_BUS_WDATA;
    sc_signal< sc_lv<1> > CRTL_BUS_WSTRB;
    sc_signal< sc_logic > CRTL_BUS_WLAST;
    sc_signal< sc_lv<1> > CRTL_BUS_WID;
    sc_signal< sc_lv<1> > CRTL_BUS_WUSER;
    sc_signal< sc_logic > CRTL_BUS_ARVALID;
    sc_signal< sc_logic > CRTL_BUS_ARREADY;
    sc_signal< sc_lv<32> > CRTL_BUS_ARADDR;
    sc_signal< sc_lv<1> > CRTL_BUS_ARID;
    sc_signal< sc_lv<32> > CRTL_BUS_ARLEN;
    sc_signal< sc_lv<3> > CRTL_BUS_ARSIZE;
    sc_signal< sc_lv<2> > CRTL_BUS_ARBURST;
    sc_signal< sc_lv<2> > CRTL_BUS_ARLOCK;
    sc_signal< sc_lv<4> > CRTL_BUS_ARCACHE;
    sc_signal< sc_lv<3> > CRTL_BUS_ARPROT;
    sc_signal< sc_lv<4> > CRTL_BUS_ARQOS;
    sc_signal< sc_lv<4> > CRTL_BUS_ARREGION;
    sc_signal< sc_lv<1> > CRTL_BUS_ARUSER;
    sc_signal< sc_logic > CRTL_BUS_RVALID;
    sc_signal< sc_logic > CRTL_BUS_RREADY;
    sc_signal< sc_lv<8> > CRTL_BUS_RDATA;
    sc_signal< sc_logic > CRTL_BUS_RLAST;
    sc_signal< sc_lv<1> > CRTL_BUS_RID;
    sc_signal< sc_lv<1> > CRTL_BUS_RUSER;
    sc_signal< sc_lv<2> > CRTL_BUS_RRESP;
    sc_signal< sc_logic > CRTL_BUS_BVALID;
    sc_signal< sc_logic > CRTL_BUS_BREADY;
    sc_signal< sc_lv<2> > CRTL_BUS_BRESP;
    sc_signal< sc_lv<1> > CRTL_BUS_BID;
    sc_signal< sc_lv<1> > CRTL_BUS_BUSER;
    sc_signal< sc_logic > blur_CRTL_BUS_m_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > blur_Block_proc9_U0_ap_start;
    sc_signal< sc_logic > blur_Block_proc9_U0_ap_done;
    sc_signal< sc_logic > blur_Block_proc9_U0_ap_continue;
    sc_signal< sc_logic > blur_Block_proc9_U0_ap_idle;
    sc_signal< sc_logic > blur_Block_proc9_U0_ap_ready;
    sc_signal< sc_lv<12> > blur_Block_proc9_U0_src_rows_V_out_din;
    sc_signal< sc_logic > blur_Block_proc9_U0_src_rows_V_out_full_n;
    sc_signal< sc_logic > blur_Block_proc9_U0_src_rows_V_out_write;
    sc_signal< sc_lv<12> > blur_Block_proc9_U0_src_cols_V_out_din;
    sc_signal< sc_logic > blur_Block_proc9_U0_src_cols_V_out_full_n;
    sc_signal< sc_logic > blur_Block_proc9_U0_src_cols_V_out_write;
    sc_signal< sc_lv<32> > blur_Block_proc9_U0_image_in;
    sc_signal< sc_lv<32> > blur_Block_proc9_U0_image_out;
    sc_signal< sc_lv<32> > blur_Block_proc9_U0_image_in_out_din;
    sc_signal< sc_logic > blur_Block_proc9_U0_image_in_out_full_n;
    sc_signal< sc_logic > blur_Block_proc9_U0_image_in_out_write;
    sc_signal< sc_lv<32> > blur_Block_proc9_U0_image_out_out_din;
    sc_signal< sc_logic > blur_Block_proc9_U0_image_out_out_full_n;
    sc_signal< sc_logic > blur_Block_proc9_U0_image_out_out_write;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_ap_start;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_ap_done;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_ap_continue;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_ap_idle;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_AWVALID;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_AWREADY;
    sc_signal< sc_lv<32> > blur_AXIM2Mat_U0_m_axi_fb_AWADDR;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_AWID;
    sc_signal< sc_lv<32> > blur_AXIM2Mat_U0_m_axi_fb_AWLEN;
    sc_signal< sc_lv<3> > blur_AXIM2Mat_U0_m_axi_fb_AWSIZE;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_AWBURST;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_AWLOCK;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_AWCACHE;
    sc_signal< sc_lv<3> > blur_AXIM2Mat_U0_m_axi_fb_AWPROT;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_AWQOS;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_AWREGION;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_AWUSER;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_WVALID;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_WREADY;
    sc_signal< sc_lv<8> > blur_AXIM2Mat_U0_m_axi_fb_WDATA;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_WSTRB;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_WLAST;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_WID;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_WUSER;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_ARVALID;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_ARREADY;
    sc_signal< sc_lv<32> > blur_AXIM2Mat_U0_m_axi_fb_ARADDR;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_ARID;
    sc_signal< sc_lv<32> > blur_AXIM2Mat_U0_m_axi_fb_ARLEN;
    sc_signal< sc_lv<3> > blur_AXIM2Mat_U0_m_axi_fb_ARSIZE;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_ARBURST;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_ARLOCK;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_ARCACHE;
    sc_signal< sc_lv<3> > blur_AXIM2Mat_U0_m_axi_fb_ARPROT;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_ARQOS;
    sc_signal< sc_lv<4> > blur_AXIM2Mat_U0_m_axi_fb_ARREGION;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_ARUSER;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_RVALID;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_RREADY;
    sc_signal< sc_lv<8> > blur_AXIM2Mat_U0_m_axi_fb_RDATA;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_RLAST;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_RID;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_RUSER;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_RRESP;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_BVALID;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_m_axi_fb_BREADY;
    sc_signal< sc_lv<2> > blur_AXIM2Mat_U0_m_axi_fb_BRESP;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_BID;
    sc_signal< sc_lv<1> > blur_AXIM2Mat_U0_m_axi_fb_BUSER;
    sc_signal< sc_lv<32> > blur_AXIM2Mat_U0_image_in_dout;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_image_in_empty_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_image_in_read;
    sc_signal< sc_lv<12> > blur_AXIM2Mat_U0_img_rows_V_dout;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_rows_V_empty_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_rows_V_read;
    sc_signal< sc_lv<12> > blur_AXIM2Mat_U0_img_cols_V_dout;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_cols_V_empty_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > blur_AXIM2Mat_U0_img_data_stream_V_din;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_data_stream_V_full_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_data_stream_V_write;
    sc_signal< sc_lv<12> > blur_AXIM2Mat_U0_img_rows_V_out_din;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_rows_V_out_full_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_rows_V_out_write;
    sc_signal< sc_lv<12> > blur_AXIM2Mat_U0_img_cols_V_out_din;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_cols_V_out_full_n;
    sc_signal< sc_logic > blur_AXIM2Mat_U0_img_cols_V_out_write;
    sc_signal< sc_logic > blur_Loop_1_proc_U0_ap_start;
    sc_signal< sc_logic > blur_Loop_1_proc_U0_ap_done;
    sc_signal< sc_logic > blur_Loop_1_proc_U0_ap_continue;
    sc_signal< sc_logic > blur_Loop_1_proc_U0_ap_idle;
    sc_signal< sc_logic > blur_Loop_1_proc_U0_ap_ready;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_0;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_1;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_2;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_3;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_4;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_5;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_6;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_7;
    sc_signal< sc_lv<8> > blur_Loop_1_proc_U0_ap_return_8;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_1_channel;
    sc_signal< sc_logic > kernel_val_0_1_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_0_1_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_0_1_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_0_channel;
    sc_signal< sc_logic > kernel_val_0_0_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_0_0_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_0_0_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_2_channel;
    sc_signal< sc_logic > kernel_val_0_2_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_0_2_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_0_2_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_0_channel;
    sc_signal< sc_logic > kernel_val_1_0_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_1_0_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_1_0_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_1_channel;
    sc_signal< sc_logic > kernel_val_1_1_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_1_1_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_1_1_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_2_channel;
    sc_signal< sc_logic > kernel_val_1_2_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_1_2_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_1_2_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_0_channel;
    sc_signal< sc_logic > kernel_val_2_0_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_2_0_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_2_0_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_1_channel;
    sc_signal< sc_logic > kernel_val_2_1_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_2_1_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_2_1_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_2_channel;
    sc_signal< sc_logic > kernel_val_2_2_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_kernel_val_2_2_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_kernel_val_2_2_channel_full_n;
    sc_signal< sc_logic > blur_Filter2D_U0_ap_start;
    sc_signal< sc_logic > blur_Filter2D_U0_ap_done;
    sc_signal< sc_logic > blur_Filter2D_U0_ap_continue;
    sc_signal< sc_logic > blur_Filter2D_U0_ap_idle;
    sc_signal< sc_logic > blur_Filter2D_U0_ap_ready;
    sc_signal< sc_lv<12> > blur_Filter2D_U0_p_src_rows_V_dout;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_rows_V_empty_n;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_rows_V_read;
    sc_signal< sc_lv<12> > blur_Filter2D_U0_p_src_cols_V_dout;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_cols_V_empty_n;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_cols_V_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_src_data_stream_V_dout;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_data_stream_V_empty_n;
    sc_signal< sc_logic > blur_Filter2D_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > blur_Filter2D_U0_p_dst_data_stream_V_full_n;
    sc_signal< sc_logic > blur_Filter2D_U0_p_dst_data_stream_V_write;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_0_0_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_0_1_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_0_2_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_1_0_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_1_1_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_1_2_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_2_0_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_2_1_read;
    sc_signal< sc_lv<8> > blur_Filter2D_U0_p_kernel_val_2_2_read;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_ap_start;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_ap_done;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_ap_continue;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_ap_idle;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_ap_ready;
    sc_signal< sc_lv<8> > blur_Mat2AXIM_U0_img_data_stream_V_dout;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_img_data_stream_V_empty_n;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_img_data_stream_V_read;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_AWVALID;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_AWREADY;
    sc_signal< sc_lv<32> > blur_Mat2AXIM_U0_m_axi_fb_AWADDR;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_AWID;
    sc_signal< sc_lv<32> > blur_Mat2AXIM_U0_m_axi_fb_AWLEN;
    sc_signal< sc_lv<3> > blur_Mat2AXIM_U0_m_axi_fb_AWSIZE;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_AWBURST;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_AWLOCK;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_AWCACHE;
    sc_signal< sc_lv<3> > blur_Mat2AXIM_U0_m_axi_fb_AWPROT;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_AWQOS;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_AWREGION;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_AWUSER;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_WVALID;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_WREADY;
    sc_signal< sc_lv<8> > blur_Mat2AXIM_U0_m_axi_fb_WDATA;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_WSTRB;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_WLAST;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_WID;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_WUSER;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_ARVALID;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_ARREADY;
    sc_signal< sc_lv<32> > blur_Mat2AXIM_U0_m_axi_fb_ARADDR;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_ARID;
    sc_signal< sc_lv<32> > blur_Mat2AXIM_U0_m_axi_fb_ARLEN;
    sc_signal< sc_lv<3> > blur_Mat2AXIM_U0_m_axi_fb_ARSIZE;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_ARBURST;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_ARLOCK;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_ARCACHE;
    sc_signal< sc_lv<3> > blur_Mat2AXIM_U0_m_axi_fb_ARPROT;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_ARQOS;
    sc_signal< sc_lv<4> > blur_Mat2AXIM_U0_m_axi_fb_ARREGION;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_ARUSER;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_RVALID;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_RREADY;
    sc_signal< sc_lv<8> > blur_Mat2AXIM_U0_m_axi_fb_RDATA;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_RLAST;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_RID;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_RUSER;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_RRESP;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_BVALID;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_m_axi_fb_BREADY;
    sc_signal< sc_lv<2> > blur_Mat2AXIM_U0_m_axi_fb_BRESP;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_BID;
    sc_signal< sc_lv<1> > blur_Mat2AXIM_U0_m_axi_fb_BUSER;
    sc_signal< sc_lv<32> > blur_Mat2AXIM_U0_image_out_dout;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_image_out_empty_n;
    sc_signal< sc_logic > blur_Mat2AXIM_U0_image_out_read;
    sc_signal< sc_logic > ap_sig_hs_continue;
    sc_signal< sc_logic > src_rows_V_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > src_rows_V_channel_din;
    sc_signal< sc_logic > src_rows_V_channel_full_n;
    sc_signal< sc_logic > src_rows_V_channel_write;
    sc_signal< sc_lv<12> > src_rows_V_channel_dout;
    sc_signal< sc_logic > src_rows_V_channel_empty_n;
    sc_signal< sc_logic > src_rows_V_channel_read;
    sc_signal< sc_logic > src_cols_V_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > src_cols_V_channel_din;
    sc_signal< sc_logic > src_cols_V_channel_full_n;
    sc_signal< sc_logic > src_cols_V_channel_write;
    sc_signal< sc_lv<12> > src_cols_V_channel_dout;
    sc_signal< sc_logic > src_cols_V_channel_empty_n;
    sc_signal< sc_logic > src_cols_V_channel_read;
    sc_signal< sc_logic > image_in_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > image_in_channel_din;
    sc_signal< sc_logic > image_in_channel_full_n;
    sc_signal< sc_logic > image_in_channel_write;
    sc_signal< sc_lv<32> > image_in_channel_dout;
    sc_signal< sc_logic > image_in_channel_empty_n;
    sc_signal< sc_logic > image_in_channel_read;
    sc_signal< sc_logic > image_out_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > image_out_channel_din;
    sc_signal< sc_logic > image_out_channel_full_n;
    sc_signal< sc_logic > image_out_channel_write;
    sc_signal< sc_lv<32> > image_out_channel_dout;
    sc_signal< sc_logic > image_out_channel_empty_n;
    sc_signal< sc_logic > image_out_channel_read;
    sc_signal< sc_logic > src_data_stream_0_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > src_data_stream_0_V_din;
    sc_signal< sc_logic > src_data_stream_0_V_full_n;
    sc_signal< sc_logic > src_data_stream_0_V_write;
    sc_signal< sc_lv<8> > src_data_stream_0_V_dout;
    sc_signal< sc_logic > src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > src_data_stream_0_V_read;
    sc_signal< sc_logic > src_rows_V_channel38_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > src_rows_V_channel38_din;
    sc_signal< sc_logic > src_rows_V_channel38_full_n;
    sc_signal< sc_logic > src_rows_V_channel38_write;
    sc_signal< sc_lv<12> > src_rows_V_channel38_dout;
    sc_signal< sc_logic > src_rows_V_channel38_empty_n;
    sc_signal< sc_logic > src_rows_V_channel38_read;
    sc_signal< sc_logic > src_cols_V_channel39_U_ap_dummy_ce;
    sc_signal< sc_lv<12> > src_cols_V_channel39_din;
    sc_signal< sc_logic > src_cols_V_channel39_full_n;
    sc_signal< sc_logic > src_cols_V_channel39_write;
    sc_signal< sc_lv<12> > src_cols_V_channel39_dout;
    sc_signal< sc_logic > src_cols_V_channel39_empty_n;
    sc_signal< sc_logic > src_cols_V_channel39_read;
    sc_signal< sc_logic > kernel_val_0_0_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_0_0_channel_din;
    sc_signal< sc_logic > kernel_val_0_0_channel_write;
    sc_signal< sc_lv<8> > kernel_val_0_0_channel_dout;
    sc_signal< sc_logic > kernel_val_0_0_channel_empty_n;
    sc_signal< sc_logic > kernel_val_0_0_channel_read;
    sc_signal< sc_logic > kernel_val_0_1_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_0_1_channel_din;
    sc_signal< sc_logic > kernel_val_0_1_channel_write;
    sc_signal< sc_lv<8> > kernel_val_0_1_channel_dout;
    sc_signal< sc_logic > kernel_val_0_1_channel_empty_n;
    sc_signal< sc_logic > kernel_val_0_1_channel_read;
    sc_signal< sc_logic > kernel_val_0_2_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_0_2_channel_din;
    sc_signal< sc_logic > kernel_val_0_2_channel_write;
    sc_signal< sc_lv<8> > kernel_val_0_2_channel_dout;
    sc_signal< sc_logic > kernel_val_0_2_channel_empty_n;
    sc_signal< sc_logic > kernel_val_0_2_channel_read;
    sc_signal< sc_logic > kernel_val_1_0_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_1_0_channel_din;
    sc_signal< sc_logic > kernel_val_1_0_channel_write;
    sc_signal< sc_lv<8> > kernel_val_1_0_channel_dout;
    sc_signal< sc_logic > kernel_val_1_0_channel_empty_n;
    sc_signal< sc_logic > kernel_val_1_0_channel_read;
    sc_signal< sc_logic > kernel_val_1_1_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_1_1_channel_din;
    sc_signal< sc_logic > kernel_val_1_1_channel_write;
    sc_signal< sc_lv<8> > kernel_val_1_1_channel_dout;
    sc_signal< sc_logic > kernel_val_1_1_channel_empty_n;
    sc_signal< sc_logic > kernel_val_1_1_channel_read;
    sc_signal< sc_logic > kernel_val_1_2_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_1_2_channel_din;
    sc_signal< sc_logic > kernel_val_1_2_channel_write;
    sc_signal< sc_lv<8> > kernel_val_1_2_channel_dout;
    sc_signal< sc_logic > kernel_val_1_2_channel_empty_n;
    sc_signal< sc_logic > kernel_val_1_2_channel_read;
    sc_signal< sc_logic > kernel_val_2_0_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_2_0_channel_din;
    sc_signal< sc_logic > kernel_val_2_0_channel_write;
    sc_signal< sc_lv<8> > kernel_val_2_0_channel_dout;
    sc_signal< sc_logic > kernel_val_2_0_channel_empty_n;
    sc_signal< sc_logic > kernel_val_2_0_channel_read;
    sc_signal< sc_logic > kernel_val_2_1_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_2_1_channel_din;
    sc_signal< sc_logic > kernel_val_2_1_channel_write;
    sc_signal< sc_lv<8> > kernel_val_2_1_channel_dout;
    sc_signal< sc_logic > kernel_val_2_1_channel_empty_n;
    sc_signal< sc_logic > kernel_val_2_1_channel_read;
    sc_signal< sc_logic > kernel_val_2_2_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > kernel_val_2_2_channel_din;
    sc_signal< sc_logic > kernel_val_2_2_channel_write;
    sc_signal< sc_lv<8> > kernel_val_2_2_channel_dout;
    sc_signal< sc_logic > kernel_val_2_2_channel_empty_n;
    sc_signal< sc_logic > kernel_val_2_2_channel_read;
    sc_signal< sc_logic > dst_data_stream_0_V_U_ap_dummy_ce;
    sc_signal< sc_lv<8> > dst_data_stream_0_V_din;
    sc_signal< sc_logic > dst_data_stream_0_V_full_n;
    sc_signal< sc_logic > dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > dst_data_stream_0_V_dout;
    sc_signal< sc_logic > dst_data_stream_0_V_empty_n;
    sc_signal< sc_logic > dst_data_stream_0_V_read;
    sc_signal< sc_logic > ap_reg_procdone_blur_Block_proc9_U0;
    sc_signal< sc_logic > ap_sig_hs_done;
    sc_signal< sc_logic > ap_reg_procdone_blur_AXIM2Mat_U0;
    sc_signal< sc_logic > ap_reg_procdone_blur_Loop_1_proc_U0;
    sc_signal< sc_logic > ap_reg_procdone_blur_Filter2D_U0;
    sc_signal< sc_logic > ap_reg_procdone_blur_Mat2AXIM_U0;
    sc_signal< sc_logic > ap_CS;
    sc_signal< sc_logic > ap_sig_top_allready;
    sc_signal< sc_logic > ap_reg_ready_blur_Block_proc9_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_blur_Block_proc9_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_blur_Block_proc9_U0_ap_start;
    sc_signal< sc_logic > ap_reg_ready_blur_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_blur_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_blur_AXIM2Mat_U0_ap_start;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const int C_M_AXI_CRTL_BUS_USER_VALUE;
    static const int C_M_AXI_CRTL_BUS_PROT_VALUE;
    static const int C_M_AXI_CRTL_BUS_CACHE_VALUE;
    static const sc_logic ap_const_logic_0;
    static const bool ap_true;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_CRTL_BUS_ARADDR();
    void thread_CRTL_BUS_ARBURST();
    void thread_CRTL_BUS_ARCACHE();
    void thread_CRTL_BUS_ARID();
    void thread_CRTL_BUS_ARLEN();
    void thread_CRTL_BUS_ARLOCK();
    void thread_CRTL_BUS_ARPROT();
    void thread_CRTL_BUS_ARQOS();
    void thread_CRTL_BUS_ARREGION();
    void thread_CRTL_BUS_ARSIZE();
    void thread_CRTL_BUS_ARUSER();
    void thread_CRTL_BUS_ARVALID();
    void thread_CRTL_BUS_AWADDR();
    void thread_CRTL_BUS_AWBURST();
    void thread_CRTL_BUS_AWCACHE();
    void thread_CRTL_BUS_AWID();
    void thread_CRTL_BUS_AWLEN();
    void thread_CRTL_BUS_AWLOCK();
    void thread_CRTL_BUS_AWPROT();
    void thread_CRTL_BUS_AWQOS();
    void thread_CRTL_BUS_AWREGION();
    void thread_CRTL_BUS_AWSIZE();
    void thread_CRTL_BUS_AWUSER();
    void thread_CRTL_BUS_AWVALID();
    void thread_CRTL_BUS_BREADY();
    void thread_CRTL_BUS_RREADY();
    void thread_CRTL_BUS_WDATA();
    void thread_CRTL_BUS_WID();
    void thread_CRTL_BUS_WLAST();
    void thread_CRTL_BUS_WSTRB();
    void thread_CRTL_BUS_WUSER();
    void thread_CRTL_BUS_WVALID();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_0_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_1_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_0_2_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_0_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_1_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_1_2_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_0_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_1_channel();
    void thread_ap_chn_write_blur_Loop_1_proc_U0_kernel_val_2_2_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_hs_continue();
    void thread_ap_sig_hs_done();
    void thread_ap_sig_ready_blur_AXIM2Mat_U0_ap_ready();
    void thread_ap_sig_ready_blur_Block_proc9_U0_ap_ready();
    void thread_ap_sig_ready_kernel_val_0_0_channel_full_n();
    void thread_ap_sig_ready_kernel_val_0_1_channel_full_n();
    void thread_ap_sig_ready_kernel_val_0_2_channel_full_n();
    void thread_ap_sig_ready_kernel_val_1_0_channel_full_n();
    void thread_ap_sig_ready_kernel_val_1_1_channel_full_n();
    void thread_ap_sig_ready_kernel_val_1_2_channel_full_n();
    void thread_ap_sig_ready_kernel_val_2_0_channel_full_n();
    void thread_ap_sig_ready_kernel_val_2_1_channel_full_n();
    void thread_ap_sig_ready_kernel_val_2_2_channel_full_n();
    void thread_ap_sig_start_in_blur_AXIM2Mat_U0_ap_start();
    void thread_ap_sig_start_in_blur_Block_proc9_U0_ap_start();
    void thread_ap_sig_top_allready();
    void thread_blur_AXILiteS_s_axi_U_ap_dummy_ce();
    void thread_blur_AXIM2Mat_U0_ap_continue();
    void thread_blur_AXIM2Mat_U0_ap_start();
    void thread_blur_AXIM2Mat_U0_image_in_dout();
    void thread_blur_AXIM2Mat_U0_image_in_empty_n();
    void thread_blur_AXIM2Mat_U0_img_cols_V_dout();
    void thread_blur_AXIM2Mat_U0_img_cols_V_empty_n();
    void thread_blur_AXIM2Mat_U0_img_cols_V_out_full_n();
    void thread_blur_AXIM2Mat_U0_img_data_stream_V_full_n();
    void thread_blur_AXIM2Mat_U0_img_rows_V_dout();
    void thread_blur_AXIM2Mat_U0_img_rows_V_empty_n();
    void thread_blur_AXIM2Mat_U0_img_rows_V_out_full_n();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_ARREADY();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_AWREADY();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_BID();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_BRESP();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_BUSER();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_BVALID();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RDATA();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RID();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RLAST();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RRESP();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RUSER();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_RVALID();
    void thread_blur_AXIM2Mat_U0_m_axi_fb_WREADY();
    void thread_blur_Block_proc9_U0_ap_continue();
    void thread_blur_Block_proc9_U0_ap_start();
    void thread_blur_Block_proc9_U0_image_in();
    void thread_blur_Block_proc9_U0_image_in_out_full_n();
    void thread_blur_Block_proc9_U0_image_out();
    void thread_blur_Block_proc9_U0_image_out_out_full_n();
    void thread_blur_Block_proc9_U0_src_cols_V_out_full_n();
    void thread_blur_Block_proc9_U0_src_rows_V_out_full_n();
    void thread_blur_CRTL_BUS_m_axi_U_ap_dummy_ce();
    void thread_blur_Filter2D_U0_ap_continue();
    void thread_blur_Filter2D_U0_ap_start();
    void thread_blur_Filter2D_U0_p_dst_data_stream_V_full_n();
    void thread_blur_Filter2D_U0_p_kernel_val_0_0_read();
    void thread_blur_Filter2D_U0_p_kernel_val_0_1_read();
    void thread_blur_Filter2D_U0_p_kernel_val_0_2_read();
    void thread_blur_Filter2D_U0_p_kernel_val_1_0_read();
    void thread_blur_Filter2D_U0_p_kernel_val_1_1_read();
    void thread_blur_Filter2D_U0_p_kernel_val_1_2_read();
    void thread_blur_Filter2D_U0_p_kernel_val_2_0_read();
    void thread_blur_Filter2D_U0_p_kernel_val_2_1_read();
    void thread_blur_Filter2D_U0_p_kernel_val_2_2_read();
    void thread_blur_Filter2D_U0_p_src_cols_V_dout();
    void thread_blur_Filter2D_U0_p_src_cols_V_empty_n();
    void thread_blur_Filter2D_U0_p_src_data_stream_V_dout();
    void thread_blur_Filter2D_U0_p_src_data_stream_V_empty_n();
    void thread_blur_Filter2D_U0_p_src_rows_V_dout();
    void thread_blur_Filter2D_U0_p_src_rows_V_empty_n();
    void thread_blur_Loop_1_proc_U0_ap_continue();
    void thread_blur_Loop_1_proc_U0_ap_start();
    void thread_blur_Mat2AXIM_U0_ap_continue();
    void thread_blur_Mat2AXIM_U0_image_out_dout();
    void thread_blur_Mat2AXIM_U0_image_out_empty_n();
    void thread_blur_Mat2AXIM_U0_img_data_stream_V_dout();
    void thread_blur_Mat2AXIM_U0_img_data_stream_V_empty_n();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_ARREADY();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_AWREADY();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_BID();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_BRESP();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_BUSER();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_BVALID();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RDATA();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RID();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RLAST();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RRESP();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RUSER();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_RVALID();
    void thread_blur_Mat2AXIM_U0_m_axi_fb_WREADY();
    void thread_dst_data_stream_0_V_U_ap_dummy_ce();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_read();
    void thread_dst_data_stream_0_V_write();
    void thread_image_in_channel_U_ap_dummy_ce();
    void thread_image_in_channel_din();
    void thread_image_in_channel_read();
    void thread_image_in_channel_write();
    void thread_image_out_channel_U_ap_dummy_ce();
    void thread_image_out_channel_din();
    void thread_image_out_channel_read();
    void thread_image_out_channel_write();
    void thread_kernel_val_0_0_channel_U_ap_dummy_ce();
    void thread_kernel_val_0_0_channel_din();
    void thread_kernel_val_0_0_channel_read();
    void thread_kernel_val_0_0_channel_write();
    void thread_kernel_val_0_1_channel_U_ap_dummy_ce();
    void thread_kernel_val_0_1_channel_din();
    void thread_kernel_val_0_1_channel_read();
    void thread_kernel_val_0_1_channel_write();
    void thread_kernel_val_0_2_channel_U_ap_dummy_ce();
    void thread_kernel_val_0_2_channel_din();
    void thread_kernel_val_0_2_channel_read();
    void thread_kernel_val_0_2_channel_write();
    void thread_kernel_val_1_0_channel_U_ap_dummy_ce();
    void thread_kernel_val_1_0_channel_din();
    void thread_kernel_val_1_0_channel_read();
    void thread_kernel_val_1_0_channel_write();
    void thread_kernel_val_1_1_channel_U_ap_dummy_ce();
    void thread_kernel_val_1_1_channel_din();
    void thread_kernel_val_1_1_channel_read();
    void thread_kernel_val_1_1_channel_write();
    void thread_kernel_val_1_2_channel_U_ap_dummy_ce();
    void thread_kernel_val_1_2_channel_din();
    void thread_kernel_val_1_2_channel_read();
    void thread_kernel_val_1_2_channel_write();
    void thread_kernel_val_2_0_channel_U_ap_dummy_ce();
    void thread_kernel_val_2_0_channel_din();
    void thread_kernel_val_2_0_channel_read();
    void thread_kernel_val_2_0_channel_write();
    void thread_kernel_val_2_1_channel_U_ap_dummy_ce();
    void thread_kernel_val_2_1_channel_din();
    void thread_kernel_val_2_1_channel_read();
    void thread_kernel_val_2_1_channel_write();
    void thread_kernel_val_2_2_channel_U_ap_dummy_ce();
    void thread_kernel_val_2_2_channel_din();
    void thread_kernel_val_2_2_channel_read();
    void thread_kernel_val_2_2_channel_write();
    void thread_src_cols_V_channel39_U_ap_dummy_ce();
    void thread_src_cols_V_channel39_din();
    void thread_src_cols_V_channel39_read();
    void thread_src_cols_V_channel39_write();
    void thread_src_cols_V_channel_U_ap_dummy_ce();
    void thread_src_cols_V_channel_din();
    void thread_src_cols_V_channel_read();
    void thread_src_cols_V_channel_write();
    void thread_src_data_stream_0_V_U_ap_dummy_ce();
    void thread_src_data_stream_0_V_din();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_0_V_write();
    void thread_src_rows_V_channel38_U_ap_dummy_ce();
    void thread_src_rows_V_channel38_din();
    void thread_src_rows_V_channel38_read();
    void thread_src_rows_V_channel38_write();
    void thread_src_rows_V_channel_U_ap_dummy_ce();
    void thread_src_rows_V_channel_din();
    void thread_src_rows_V_channel_read();
    void thread_src_rows_V_channel_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
